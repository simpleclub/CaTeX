name: Checks

on:
  pull_request:
    branches:
      - master

jobs:
  analyze:
    timeout-minutes: 6
    runs-on: ${{ matrix.os }}
    name: Analysis & format (${{ matrix.channel }} on ${{ matrix.os }})
    strategy:
      matrix:
        os:
          - ubuntu-latest
        channel:
          - 'stable'
          - 'beta'
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1.4.0
        with:
          channel: ${{ matrix.channel }}

      - name: Setup projects
        run: |
          flutter pub get

          cd example
          flutter create .
          rm -rf test
          flutter pub get

          cd ../demo
          flutter pub get

          cd ..

      - name: Check package and example format (flutter format)
        if: matrix.channel == 'stable'
        run: flutter format lib gen test example --set-exit-if-changed --fix

      - name: Check package and example format (dart format)
        if: matrix.channel != 'stable'
        run: dart format lib gen test example

      - name: Check demo format
        # The demo project needs separate format checking as it only runs on dev.
        if: matrix.channel == 'dev'
        run: dart format demo

      - name: Analyze package and example
        run: flutter analyze --no-current-package lib gen test example

      - name: Analyze demo
        # The demo project needs a separate analysis as it only runs on dev.
        if: matrix.channel == 'dev'
        run: flutter analyze --no-current-package demo

  test:
    timeout-minutes: 6
    runs-on: ${{ matrix.os }}
    name: Test (${{ matrix.channel }} on ${{ matrix.os }})
    strategy:
      matrix:
        os:
          - ubuntu-latest
        channel:
          - 'stable'
          - 'beta'
          - 'dev'
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1.4.0
        with:
          channel: ${{ matrix.channel }}

      - name: Setup project
        run: flutter pub get

      - name: Run unit tests
        run: flutter test

  pana:
    timeout-minutes: 9
    runs-on: ubuntu-latest
    name: Pub PANA

    steps:
      - uses: actions/checkout@v2

      - name: Clean up directory # Matches the publish workflow.
        run: rm -rf .github demo gen CODEOWNERS CONTRIBUTING.md function_prioritization.csv

      - uses: axel-op/dart-package-analyzer@v2
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
